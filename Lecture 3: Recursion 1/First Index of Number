Problem statement
Given an array of length N and an integer x, you need to find and return the first index of integer x present in the array. Return -1 if it is not present in the array.

First index means, the index of first occurrence of x in the input array.

Do this recursively. Indexing in the array starts from 0.


public class Solution {
    public static int firstIndex(int input[], int x) {
        return firstIndexHelper(input, x, 0);
    }

    private static int firstIndexHelper(int input[], int x, int index) {
        if (index == input.length) {
            // Base case: if the index reaches the end of the array, x is not found
            return -1;
        } else if (input[index] == x) {
            // Base case: if x is found at the current index, return the index
            return index;
        } else {
            // Recursive case: check the rest of the array for x
            return firstIndexHelper(input, x, index + 1);
        }
    }

    public static void main(String[] args) {
        // Example usage:
        int[] array = {1, 2, 3, 4, 5, 3};
        int x = 3;
        int result = firstIndex(array, x);
        System.out.println(x + " first occurs at index: " + result);
    }
}

